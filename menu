#!/bin/bash

set -e

RED='\033[0;41;30m'
STD='\033[0;0;39m'
_VERSION="8.2"
 
pause(){
  read -p "Press [Enter] key to continue..." fackEnterKey
}

function prompt {
	echo
    if [[ -z $2 || ${2^} = Y* ]]; then
        prompt='Y/n'
        default='Y'
    elif [[ ${2^} = N* ]]; then
        prompt='y/N'
        default='N'
    fi
    
	while true; do
		read -p "$1 [$prompt] " ans
		
		if [[ -z $ans ]]; then
			ans=$default
        fi
        
		if [[ ${ans^} = Y* ]]; then
			echo
			return 0
		elif [[ ${ans^} = N* ]]; then
			echo
			return 1
		fi
	done
}

build(){
	# echo "-Parameter #1 is \"$1\".-"
# 	if [ -d "$1" ]; then

# 	fi
	#echo $PWD
	cd $1
	#echo $PWD
	sudo x-terminal-emulator -e './build'
	#sudo ./build
	#echo $PWD
	cd ..	
	#echo $PWD
	# uncomment pause to see messages
	#pause
}

remove(){
	if prompt "  Remove '$1'?"; then
		if [ -d "$1" ]; then
			sudo rm -rf $1
		fi
	fi	
	
	# uncomment pause to see messages
	#pause
}

setup(){
	
	if [ -d "$1" ]; then
		sudo rm -rf $1
	fi

	sudo mkdir $1 && cd $1 && sudo lb config
	sudo cp /usr/share/doc/live-build/examples/auto/* auto/

	if [ ! -f "./build" ]; then
		cd ..
		sudo cp ./buildx ./$1/build
	fi
	
	# uncomment pause to see messages
	#pause
}

update(){
	# echo $PWD
#	echo "-Parameter #1 is \"$1\".-"
	cd $1
	# echo $PWD
		
	rm -rf ./auto/*
	cp -rf ../$2/auto/* ./auto/
	cd config

	if [ ! -d "bootloaders" ]; then
		mkdir bootloaders
	fi

	rm -rf ./apt/*
	rm -rf ./archives/*
	rm -rf ./hooks/*
	rm -rf ./includes.chroot/*
	rm -rf ./package-lists/*
	rm -rf ./includes.installer/*
	rm -rf ./bootloaders/*
	rm -rf ./includes.binary/*
	
	cp ../../$2/config/apt/* ./apt/
	cp -r ../../$2/config/bootloaders/* ./bootloaders/
	cp -r ../../$2/config/includes.installer/* ./includes.installer/
	cp ../../$2/config/includes.installer/preseed.cfg ./includes.binary/install
	cp -r ../../$2/config/hooks/* ./hooks/
	cp -r ../../$2/config/includes.chroot/* ./includes.chroot/
	cp ../../$2/config/package-lists/* ./package-lists/

	sed -i -e 's/VERSION/'${_VERSION}'/g' ./includes.chroot/etc/hostname
	sed -i -e 's/VERSION/'${_VERSION}'/g' ./includes.chroot/etc/issue
	sed -i -e 's/VERSION/'${_VERSION}'/g' ./includes.chroot/etc/issue.net
	sed -i -e 's/VERSION/'${_VERSION}'/g' ./includes.chroot/etc/motd
	sed -i -e 's/VERSION/'${_VERSION}'/g' ./includes.chroot/etc/os-release
	
	#echo $PWD	
	cd ../..
	#echo $PWD
	
	#echo $1-"Updated"

	# uncomment pause to see messages
	# pause
}

main(){
	clear
	echo -e "\t~~~~~~~~~~~~~~~~~~~~~"	
	echo -e "\t M A I N - M E N U"
	echo -e "\t~~~~~~~~~~~~~~~~~~~~~"
	echo " "
	echo -e "\ts. Setup"
	echo -e "\tr. Remove"
	echo -e "\tu. Update"
	echo -e "\tb. Build"
	echo -e "\tp. Purge"
	echo " "
	echo -e "\tq. Quit"
	echo " "
		
	local choice
	read -p "Enter choice or q : " choice

	case $choice in
		s) setup "diy-build" ;;
		r) remove "diy-build" ;;
		u) update "diy-build" "diy-source" ${_VERSION} ;;
		b) build "diy-build" ;;
		p) purge "diy-build" ;;
		q|Q) break;;
		*) echo -e "\tinvalid answer, please try again" ;;
	esac

}

# ----------------------------------------------
# Step #3: Trap CTRL+C, CTRL+Z and quit singles
# ----------------------------------------------
trap '' SIGINT SIGQUIT SIGTSTP

while true
do
	main
done

